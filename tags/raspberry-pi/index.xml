<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raspberry pi on DEV LOG</title>
    <link>/tags/raspberry-pi/</link>
    <description>Recent content in raspberry pi on DEV LOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 29 Jan 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raspberry Pi 3B&#43; Wifi Ethernet Bridge</title>
      <link>/posts/200129-1/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/200129-1/</guid>
      <description>Draft 2019-04-23
Origin Post https://willhaley.com/blog/raspberry-pi-wifi-ethernet-bridge/
목표 라즈베리파이를 통해서 내 데스크탑을 와이파이에 연결합니다. 따라서 라즈베리파이를 Ehternet Bridge로 만듭니다.
준비물 Raspberry Pi 3B+, 키보드, 마우스, 모니터 데스크탑과 와이파이 네트워크의 브릿지로 사용합니다. 라즈베리파이 3B+는 802.11ac 와이파이를 가지고 있어서 이 프로젝트에 적당합니다. 데스크탑: iMac 27 공유기: ipTime Raspbian Stretch 단계 sudo -Es apt-get update &amp;amp;&amp;amp; apt-get upgrade 라즈베리파이를 Wifi에 연결합니다. /etc/wpa_supplicant/wpa_supplicant.conf 파일을 열어서 아래와 유사하게 되어있는 걸 확인합니다. country_code는 US로 지정했습니다.
country=US ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 network={ ssid=&amp;#34;YOUR SSID&amp;#34; psk=&amp;#34;YOUR PASSWORD&amp;#34; } 아래 커맨드를 실행합니다.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Boot without screen on MacOS</title>
      <link>/posts/200129-2/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/200129-2/</guid>
      <description>Draft 2019-04-26 준비물 | Prerequisites 내 컴퓨터 공유기 LAN 케이블 Raspberry Pi Micro SD Card 16GB, Micro SD Card Reader 개발환경 | Environments MacOS Mojave RPI 3B Raspbian Stretch With Desktop BalenaEtcher 원격화면 연결을 위한 설정 | Turn VNC on sudo raspi-config 1. interfaces config 2. VNC Enable &amp;gt; YES tightvncserver 설치 | Install tightvncserver sudo apt-get install tightvncserver
Reboot &amp;amp; Execute sudo reboot ... tightvncserver MacOS Security Preferences Settings &amp;gt; Sharing 에서 Screen sharing enable 설정하기</description>
    </item>
    
    <item>
      <title>Rapsberry PI as Router / 3B &#43; Buster</title>
      <link>/posts/190826/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/190826/</guid>
      <description>Environments Raspberry PI 3B x 1 Micro SD Card 32GB x 1 Lan Cable x 1 Tools Raspbian Buster Balena Etcher Terminal Summary 단계를 그대로 따라한다.
Step 1. Upgrade sudo apt-get update sudo apt-get upgrade 2. Install Hostapd, Bridge-utils sudo apt-get install hostapd bridge-utils sudo systemctl stop hostapd 3. dhcpcd.conf 파일 편집하기 sudo vi /etc/dhcpcd.conf 맨 아래에 두줄 추가
denyinterfaces wlan0 denyinterfaces eth0 4. Bridge 만들기 sudo brctl addbr br0 sudo brctl addif br0 eth0 5.</description>
    </item>
    
    <item>
      <title>Docker Basic Command</title>
      <link>/posts/190503/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/190503/</guid>
      <description>Docker Hub https://hub.docker.com/
summary docker가 실행되고 로그인 된 상태에서 다음 커맨드를 실행할 수 있음 Pull Docker Repo docker pull susany/tutorials:rpi # example # docker pull [user name]/[repo name]:[tag name] # or # docker pull raspbian/stretch Start Docker Repo docker run -d -p 32808:22 -P --name rpi susany/tutorials:rpi /usr/sbin/sshd -D &amp;lsquo;susany/tutorials:rpi&amp;rsquo; repo를 &amp;lsquo;rpi&amp;rsquo;라는 이름으로 실행한다. repo를 실행할 때 sshd도 함께 실행한다. -P: docker image 생성시에 설정되어있는 PORT를 모두 오픈한다는 옵션 -v: 링크할 로컬 폴더를 뒤에 나열한다는 옵션 Show Process List Docker Container 상태 확인하기</description>
    </item>
    
  </channel>
</rss>