<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on DEV LOG</title>
    <link>/tags/android/</link>
    <description>Recent content in android on DEV LOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 21 Jun 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Arduino HC-06과 Android 블루투스 통신으로 LED 제어하기</title>
      <link>/posts/210621/</link>
      <pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/210621/</guid>
      <description>준비 준비물 Arduino Uno x1 HC-06 module x1 LED x2 안드로이드 폰(Android 11) 개발환경 Android Studio 4.2 Arduino IDE, VSCode MacOS Bigsur HC-06 Spec. 블루투스 버전: 2.0 밴드: 2.4GHz ~ 2.48GHz 수신 거리: -85dBm (Decibel-milliwatts) 목표 아두이노 HC-06과 안드로이드폰 페어링 및 연결 안드로이드폰의 SimpleBluetoothTerminal 앱으로 LED 제어하기 단계 아두이노 아두이노 소스코드 bluetooth.ino
/* HC-06 bluetooth */ #include &amp;lt;SoftwareSerial.h&amp;gt; // Serial 통신핀으로 D11번핀을 Rx로, D10번핀을 Tx로 선언 SoftwareSerial btSerial (11, 10); // btSerial(RX, TX); int led1 = 7; int led2 = 8; int data; char command = 0; void setup() { Serial.</description>
    </item>
    
    <item>
      <title>Android / Get Phone Number, Carrier Name on Android 19-29</title>
      <link>/posts/190809-2/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/190809-2/</guid>
      <description>Environments Android API 19 - 29 Kotlin Android Studio 3.4 step MainActivity.kt override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) val tm = getSystemService(Context.TELEPHONY_SERVICE) as TelephonyManager log(&amp;#34;======================================&amp;#34;) if (if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.M) { checkSelfPermission(READ_PHONE_STATE) == PackageManager.PERMISSION_GRANTED } else { TODO(&amp;#34;VERSION.SDK_INT &amp;lt; M&amp;#34;) } ) { log(tm.line1Number) // +821011112222 } log(tm.networkCountryIso) // KR log(tm.networkOperator) // 45080 log(tm.networkOperatorName) // KT log(&amp;#34;==========================================&amp;#34;) } App Manifest &amp;lt;uses-permission android:name=&amp;#34;android.permission.READ_PHONE_STATE&amp;#34;/&amp;gt; App Permission Check Settings -&amp;gt; Applications -&amp;gt; [This App] -&amp;gt; Permission -&amp;gt; Telephone Turn permission On </description>
    </item>
    
    <item>
      <title>Android / Fullscreen Splash</title>
      <link>/posts/180622/</link>
      <pubDate>Fri, 22 Jun 2018 11:10:19 +0000</pubDate>
      
      <guid>/posts/180622/</guid>
      <description>Fullscreen Activity AndroidManifest.xml &amp;lt;activity android:name=&amp;#34;.SplashActivity&amp;#34; android:screenOrientation=&amp;#34;portrait&amp;#34; android:theme=&amp;#34;@style/AppTheme.NoActionBar&amp;#34;&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;#34;android.intent.action.MAIN&amp;#34; /&amp;gt; &amp;lt;category android:name=&amp;#34;android.intent.category.LAUNCHER&amp;#34; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/activity&amp;gt; values/v23/styles &amp;lt;style name=&amp;#34;AppTheme.NoActionBar&amp;#34;&amp;gt; &amp;lt;item name=&amp;#34;windowActionBar&amp;#34;&amp;gt;false&amp;lt;/item&amp;gt; &amp;lt;item name=&amp;#34;windowNoTitle&amp;#34;&amp;gt;true&amp;lt;/item&amp;gt; &amp;lt;item name=&amp;#34;android:windowLightStatusBar&amp;#34;&amp;gt;true&amp;lt;/item&amp;gt; &amp;lt;/style&amp;gt; values/styles &amp;lt;style name=&amp;#34;AppTheme.NoActionBar&amp;#34;&amp;gt; &amp;lt;item name=&amp;#34;windowActionBar&amp;#34;&amp;gt;false&amp;lt;/item&amp;gt; &amp;lt;item name=&amp;#34;windowNoTitle&amp;#34;&amp;gt;true&amp;lt;/item&amp;gt; &amp;lt;/style&amp;gt; </description>
    </item>
    
    <item>
      <title>Android / Connect Wifi on my app</title>
      <link>/posts/180413-2/</link>
      <pubDate>Fri, 13 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/180413-2/</guid>
      <description>Prerequsites Env. Android studio 3 Target API 26 Kotlin Getting Started 1. Permission &amp;lt;uses-permission android:name=&amp;#34;android.permission.CHANGE_WIFI_STATE&amp;#34; /&amp;gt; &amp;lt;uses-permission android:name=&amp;#34;android.permission.ACCESS_WIFI_STATE&amp;#34; /&amp;gt; 2. Code kotlin fun wifiConnect() { val ssid = &amp;#34;my hotspot ssid&amp;#34; val key = &amp;#34;my hotspot password&amp;#34; val wifiConfig = WifiConfiguration() wifiConfig.SSID = &amp;#34;\&amp;#34;&amp;#34; + ssid + &amp;#34;\&amp;#34;&amp;#34; wifiConfig.preSharedKey = &amp;#34;\&amp;#34;&amp;#34; + key + &amp;#34;\&amp;#34;&amp;#34; wifiConfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.WPA_PSK) val wifiManager = applicationContext.getSystemService(Context.WIFI_SERVICE) as WifiManager val netId = wifiManager.addNetwork(wifiConfig) wifiManager.disconnect() wifiManager.enableNetwork(netId, true) wifiManager.reconnect() } </description>
    </item>
    
  </channel>
</rss>